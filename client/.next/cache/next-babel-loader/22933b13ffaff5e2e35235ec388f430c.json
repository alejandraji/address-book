{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/app/pages/address-book.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport Layout from '../components/layout/layout';\nimport Input from '../components/input/input';\nimport Card from '../components/card/card';\nimport search from '../addressesApi/search';\nimport seedAddresses from '../addressesApi/seedAddresses';\nexport default function Home({}) {\n  // seedAddresses()\n  const {\n    0: searchString,\n    1: setSearchString\n  } = useState('');\n  const {\n    0: addresses,\n    1: setAddresses\n  } = useState([]);\n\n  const prependAddress = address => {\n    setAddresses([address, ...addresses]);\n  };\n\n  const removeAddress = addressToRemove => {\n    setAddresses(addresses.filter(address => addressToRemove.id != address.id));\n  };\n\n  const replaceAddress = replacementAddress => {\n    setAddresses(addresses.map(address => replacementAddress.id === address.id ? replacementAddress : address));\n  };\n\n  const searchHandleChange = e => setSearchString(e.target.value);\n\n  const renderSearchInput = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full md:w-1/2\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        value: searchString,\n        onChange: searchHandleChange,\n        icon: \"icon-search.svg\",\n        name: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  };\n\n  const cardProps = {\n    prependAddress,\n    removeAddress,\n    replaceAddress\n  };\n\n  const renderAddressCards = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-10\",\n      children: [/*#__PURE__*/_jsxDEV(Card, _objectSpread({}, cardProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), addresses.map(address => /*#__PURE__*/_jsxDEV(Card, _objectSpread({\n        initialAddress: address\n      }, cardProps), address.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  };\n\n  useEffect(() => {\n    search(searchString).then(results => setAddresses(results));\n  }, [searchString]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    home: true,\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Address Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-8\",\n      children: \"Address Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), renderSearchInput(), renderAddressCards()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/app/pages/address-book.js"],"names":["React","useState","useEffect","Head","Layout","Input","Card","search","seedAddresses","Home","searchString","setSearchString","addresses","setAddresses","prependAddress","address","removeAddress","addressToRemove","filter","id","replaceAddress","replacementAddress","map","searchHandleChange","e","target","value","renderSearchInput","cardProps","renderAddressCards","then","results"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AAEA,eAAe,SAASC,IAAT,CAAe,EAAf,EAAoB;AACjC;AACA,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCV,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAA,OAACW,SAAD;AAAA,OAAYC;AAAZ,MAA4BZ,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMa,cAAc,GAAGC,OAAO,IAAI;AAChCF,IAAAA,YAAY,CAAC,CAACE,OAAD,EAAS,GAAGH,SAAZ,CAAD,CAAZ;AACD,GAFD;;AAIA,QAAMI,aAAa,GAAGC,eAAe,IAAI;AACvCJ,IAAAA,YAAY,CAACD,SAAS,CAACM,MAAV,CAAiBH,OAAO,IAAIE,eAAe,CAACE,EAAhB,IAAsBJ,OAAO,CAACI,EAA1D,CAAD,CAAZ;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAGC,kBAAkB,IAAI;AAC3CR,IAAAA,YAAY,CAACD,SAAS,CAACU,GAAV,CAAcP,OAAO,IAAIM,kBAAkB,CAACF,EAAnB,KAA0BJ,OAAO,CAACI,EAAlC,GAAuCE,kBAAvC,GAA4DN,OAArF,CAAD,CAAZ;AACD,GAFD;;AAIA,QAAMQ,kBAAkB,GAAGC,CAAC,IAAIb,eAAe,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAA/C;;AAEA,QAAMC,iBAAiB,GAAG,MAAM;AAC9B,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,KAAK,EAAEjB,YADT;AAEE,QAAA,QAAQ,EAAEa,kBAFZ;AAGE,QAAA,IAAI,EAAC,iBAHP;AAIE,QAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAUD,GAXD;;AAaA,QAAMK,SAAS,GAAG;AAChBd,IAAAA,cADgB;AAEhBE,IAAAA,aAFgB;AAGhBI,IAAAA;AAHgB,GAAlB;;AAMA,QAAMS,kBAAkB,GAAG,MAAM;AAC/B,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE,QAAC,IAAD,oBAAUD,SAAV;AAAA;AAAA;AAAA;AAAA,cADF,EAEGhB,SAAS,CAACU,GAAV,CAAeP,OAAD,iBACb,QAAC,IAAD;AAEE,QAAA,cAAc,EAAEA;AAFlB,SAGMa,SAHN,GACOb,OAAO,CAACI,EADf;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD,GAbD;;AAeAjB,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,CAACG,YAAD,CAAN,CACGoB,IADH,CACQC,OAAO,IAAIlB,YAAY,CAACkB,OAAD,CAD/B;AAED,GAHQ,EAGP,CAACrB,YAAD,CAHO,CAAT;AAKA,sBACE,QAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAKKiB,iBAAiB,EALtB,EAMKE,kBAAkB,EANvB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Head from 'next/head'\nimport Layout from '../components/layout/layout'\nimport Input from '../components/input/input'\nimport Card from '../components/card/card'\n\nimport search from '../addressesApi/search';\nimport seedAddresses from '../addressesApi/seedAddresses'; \n\nexport default function Home( {} ) {\n  // seedAddresses()\n  const [searchString, setSearchString] = useState('')\n  const [addresses, setAddresses] = useState([])\n\n  const prependAddress = address => {\n    setAddresses([address,...addresses])\n  }\n\n  const removeAddress = addressToRemove => {\n    setAddresses(addresses.filter(address => addressToRemove.id != address.id))\n  }\n\n  const replaceAddress = replacementAddress => {\n    setAddresses(addresses.map(address => replacementAddress.id === address.id ? replacementAddress : address))\n  }\n\n  const searchHandleChange = e => setSearchString(e.target.value);\n\n  const renderSearchInput = () => {\n    return (\n      <div className=\"w-full md:w-1/2\">\n        <Input\n          value={searchString}\n          onChange={searchHandleChange}\n          icon=\"icon-search.svg\"\n          name=\"search\"\n        />\n      </div>\n    )\n  }\n\n  const cardProps = {\n    prependAddress,\n    removeAddress,\n    replaceAddress\n  }\n\n  const renderAddressCards = () => {\n    return (\n      <div className=\"mt-10\">\n        <Card {...cardProps} />\n        {addresses.map((address) => \n          <Card \n            key={address.id} \n            initialAddress={address} \n            {...cardProps}\n          />\n        )}\n      </div>\n    )\n  }\n\n  useEffect(() => {\n    search(searchString)\n      .then(results => setAddresses(results));\n  },[searchString])\n\n  return (\n    <Layout home>\n      <Head>\n        <title>Address Book</title>\n      </Head>\n      <h1 className=\"mb-8\">Address Book</h1>\n        {renderSearchInput()}\n        {renderAddressCards()}\n    </Layout>\n  )\n}"]},"metadata":{},"sourceType":"module"}