{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/app/components/card/card.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport styles from './card.module.scss';\nimport Button from '../button/button';\nimport Input from '../input/input';\nimport deleteById from '../../addressesApi/deleteById';\nimport create from '../../addressesApi/create';\nimport update from '../../addressesApi/update';\nconst emptyAddress = {\n  line1: '',\n  city: '',\n  state: '',\n  zip: '',\n  id: null\n};\nexport default function Card({\n  initialAddress = emptyAddress,\n  prependAddress,\n  removeAddress,\n  replaceAddress\n}) {\n  const {\n    0: editState,\n    1: setEditState\n  } = useState(false);\n  const {\n    0: address,\n    1: setAddress\n  } = useState(initialAddress);\n\n  const formHandleClick = () => {\n    setEditState(true);\n    renderEditForm(address);\n  }; // Open form to create a new address\n\n\n  const createHandleClick = () => {\n    setEditState(true);\n  }; // Delete address\n\n\n  const deleteHandleClick = () => {\n    deleteById(address.id).then(() => removeAddress(address));\n  };\n\n  const renderEditForm = address => {\n    const handleChange = event => {\n      const updatedAddress = _objectSpread(_objectSpread({}, address), {}, {\n        [event.target.name]: event.target.value\n      });\n\n      setAddress(updatedAddress);\n    }; // Update address\n\n\n    const saveHandleClick = () => {\n      setEditState(false);\n\n      if (!address.id) {\n        create(address).then(createdAddress => prependAddress(createdAddress));\n      } else {\n        update(address).then(updatedAddress => {\n          console.log(updatedAddress);\n          replaceAddress(updatedAddress);\n        });\n      }\n    }; // Close form\n\n\n    const cancelHandleClick = () => {\n      setEditState(false);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `border-2 border-purple p-8 mt-8 w-full md:w-1/2 ${editState ? styles['card__edit--visible'] : styles['card__edit']}`,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        onChange: handleChange,\n        label: \"Address Line 1\",\n        name: \"line1\",\n        placeholder: \"Address\",\n        value: address.line1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: handleChange,\n        label: \"City\",\n        name: \"city\",\n        placeholder: \"City\",\n        value: address.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: handleChange,\n        label: \"State\",\n        name: \"state\",\n        placeholder: \"State\",\n        value: address.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: handleChange,\n        label: \"Zipcode\",\n        name: \"zip\",\n        placeholder: \"Zipcode\",\n        value: address.zip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: saveHandleClick,\n        variant: \"primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: cancelHandleClick,\n        variant: \"primary\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  };\n\n  const initialAddressCard = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [initialAddress.line1, \", \", initialAddress.city, \", \", initialAddress.state, \" \", initialAddress.zip]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 30\n  }, this);\n\n  const addAddressButton = /*#__PURE__*/_jsxDEV(Button, {\n    onClick: createHandleClick,\n    variant: \"secondary\",\n    children: \"Add Address\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 28\n  }, this);\n\n  const editAddressButton = /*#__PURE__*/_jsxDEV(Button, {\n    onClick: formHandleClick,\n    variant: \"secondary\",\n    children: \"Edit\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 29\n  }, this);\n\n  const deleteAddressButton = /*#__PURE__*/_jsxDEV(Button, {\n    onClick: deleteHandleClick,\n    variant: \"error\",\n    children: \"Delete\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 31\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.card,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex flex-wrap justify-between items-center`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 md:mb-0\",\n        children: [!editState && !address.id && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg\",\n          children: \"Add a new user's address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 40\n        }, this), initialAddress.id && initialAddressCard]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !address.id ? addAddressButton : editAddressButton && deleteAddressButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), renderEditForm(address)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 3\n  }, this);\n}","map":{"version":3,"sources":["/app/components/card/card.js"],"names":["React","useState","useEffect","styles","Button","Input","deleteById","create","update","emptyAddress","line1","city","state","zip","id","Card","initialAddress","prependAddress","removeAddress","replaceAddress","editState","setEditState","address","setAddress","formHandleClick","renderEditForm","createHandleClick","deleteHandleClick","then","handleChange","event","updatedAddress","target","name","value","saveHandleClick","createdAddress","console","log","cancelHandleClick","initialAddressCard","addAddressButton","editAddressButton","deleteAddressButton","card"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nimport styles from './card.module.scss'\nimport Button from '../button/button'\nimport Input from '../input/input'\nimport deleteById from '../../addressesApi/deleteById';\nimport create from '../../addressesApi/create';\nimport update from '../../addressesApi/update';\nconst emptyAddress = { line1:'', city:'', state:'', zip: '', id:null }\n\nexport default function Card({initialAddress = emptyAddress, prependAddress, removeAddress, replaceAddress }) {\n  const [editState, setEditState] = useState(false);\n  const [address, setAddress] = useState(initialAddress)\n\n  const formHandleClick = () => {\n    setEditState(true);\n    renderEditForm(address);\n  }\n\n  // Open form to create a new address\n  const createHandleClick = () => {\n    setEditState(true);\n  }\n\n  // Delete address\n  const deleteHandleClick = () => {\n    deleteById(address.id)\n    .then(()=> removeAddress(address))\n  }\n\n  const renderEditForm = (address) => {\n    const handleChange = (event) => {\n      const updatedAddress = {\n        ...address,\n        [event.target.name]: event.target.value,\n      }\n      setAddress(updatedAddress);\n    }\n    // Update address\n    const saveHandleClick = () => {\n      setEditState(false);\n      if (!address.id) {\n        create(address)\n         .then(createdAddress => prependAddress(createdAddress))\n  \n      } else { \n        update(address)\n         .then(updatedAddress => { \n          console.log(updatedAddress)\n          replaceAddress(updatedAddress)\n        })\n      }\n    }\n    // Close form\n    const cancelHandleClick = () => {\n      setEditState(false);\n    }\n    \n    return (\n      <div className={`border-2 border-purple p-8 mt-8 w-full md:w-1/2 ${editState ? styles['card__edit--visible']: styles['card__edit']}`}>\n        <Input onChange={handleChange} label=\"Address Line 1\" name=\"line1\" placeholder=\"Address\" value={address.line1}></Input>\n        <Input onChange={handleChange} label=\"City\" name=\"city\" placeholder=\"City\" value={address.city}></Input>\n        <Input onChange={handleChange} label=\"State\" name=\"state\" placeholder=\"State\" value={address.state}></Input>\n        <Input onChange={handleChange} label=\"Zipcode\" name=\"zip\" placeholder=\"Zipcode\" value={address.zip}></Input>\n        <Button onClick={saveHandleClick} variant=\"primary\">Save</Button>\n        <Button onClick={cancelHandleClick} variant=\"primary\">Cancel</Button> \n      </div>\n    )\n  }\n\n  const initialAddressCard = <p>{initialAddress.line1}, {initialAddress.city}, {initialAddress.state} {initialAddress.zip}</p>\n  const addAddressButton = <Button onClick={createHandleClick} variant=\"secondary\">Add Address</Button>\n  const editAddressButton = <Button onClick={formHandleClick} variant=\"secondary\">Edit</Button>\n  const deleteAddressButton = <Button onClick={deleteHandleClick} variant=\"error\">Delete</Button> \n\n  return (\n  <div className={styles.card}>\n    <div className={`flex flex-wrap justify-between items-center`}>\n      <div className=\"mb-4 md:mb-0\">\n        {!editState && !address.id  && <p className=\"text-lg\">Add a new user's address</p> }\n        { initialAddress.id && initialAddressCard} \n      </div>\n      <div>\n      {!address.id ? addAddressButton : editAddressButton && deleteAddressButton}\n      </div>\n    </div>\n    {renderEditForm(address)}\n  </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}