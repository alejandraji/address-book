{"ast":null,"code":"var update = function update(address) {\n  return fetch(\"http://localhost:3001/addresses/\".concat(address.id), {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(address)\n  }).then(function (response) {\n    return response.json().then(function (parsedResponse) {\n      return {\n        parsedResponse: parsedResponse,\n        ok: ok\n      };\n    });\n  }).then(function (_ref) {\n    var parsedResponse = _ref.parsedResponse,\n        ok = _ref.ok;\n\n    if (ok) {\n      return parsedResponse;\n    } else {\n      console.log(parsedResponse);\n      return Promise.reject(JSON.parse(parsedResponse.message));\n    }\n  });\n};\n\nexport default update;","map":{"version":3,"sources":["/app/addressesApi/update.js"],"names":["update","address","fetch","id","method","headers","body","JSON","stringify","then","response","json","parsedResponse","ok","console","log","Promise","reject","parse","message"],"mappings":"AAAA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,OAAD;AAAA,SACbC,KAAK,2CAAoCD,OAAO,CAACE,EAA5C,GAAkD;AACrDC,IAAAA,MAAM,EAAE,KAD6C;AAErDC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAF4C;AAKrDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,OAAf;AAL+C,GAAlD,CAAL,CAOGQ,IAPH,CAOQ,UAAAC,QAAQ,EAAI;AAChB,WAAOA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,UAAAG,cAAc;AAAA,aAAK;AAACA,QAAAA,cAAc,EAAdA,cAAD;AAAiBC,QAAAA,EAAE,EAAFA;AAAjB,OAAL;AAAA,KAAnC,CAAP;AACD,GATH,EAUGJ,IAVH,CAUQ,gBAA0B;AAAA,QAAxBG,cAAwB,QAAxBA,cAAwB;AAAA,QAARC,EAAQ,QAARA,EAAQ;;AAC9B,QAAIA,EAAJ,EAAQ;AACN,aAAOD,cAAP;AACD,KAFD,MAEO;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AACA,aAAOI,OAAO,CAACC,MAAR,CAAeV,IAAI,CAACW,KAAL,CAAWN,cAAc,CAACO,OAA1B,CAAf,CAAP;AACD;AACF,GAjBH,CADa;AAAA,CAAf;;AAoBA,eAAenB,MAAf","sourcesContent":["const update = (address)=>\n  fetch(`http://localhost:3001/addresses/${address.id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(address)\n  })\n    .then(response => {\n      return response.json().then(parsedResponse => ({parsedResponse, ok}))\n    }) \n    .then(({parsedResponse, ok}) => {\n      if (ok) {\n        return parsedResponse\n      } else {\n        console.log(parsedResponse)\n        return Promise.reject(JSON.parse(parsedResponse.message))\n      }\n    })\n\nexport default update;"]},"metadata":{},"sourceType":"module"}