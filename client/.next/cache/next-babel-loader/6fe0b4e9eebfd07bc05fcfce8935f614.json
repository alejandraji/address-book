{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/app/pages/address-book.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport Layout from '../components/layout/layout';\nimport Input from '../components/input/input';\nimport Card from '../components/card/card';\nimport search from '../addressesApi/search';\nimport seedAddresses from '../addressesApi/seedAddresses';\nexport default function Home(_ref) {\n  _s();\n\n  var _this = this;\n\n  _objectDestructuringEmpty(_ref);\n\n  // seedAddresses()\n  var _useState = useState(''),\n      searchString = _useState[0],\n      setSearchString = _useState[1];\n\n  var _useState2 = useState([]),\n      addresses = _useState2[0],\n      setAddresses = _useState2[1];\n\n  var prependAddress = function prependAddress(address) {\n    setAddresses([address].concat(_toConsumableArray(addresses)));\n  };\n\n  var removeAddress = function removeAddress(addressToRemove) {\n    setAddresses(addresses.filter(function (address) {\n      return addressToRemove.id != address.id;\n    }));\n  };\n\n  var replaceAddress = function replaceAddress(replacementAddress) {\n    setAddresses(addresses.map(function (address) {\n      return replacementAddress.id === address.id ? replacementAddress : address;\n    }));\n  };\n\n  useEffect(function () {\n    search(searchString).then(function (results) {\n      return setAddresses(results);\n    });\n  }, [searchString]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    home: true,\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Address Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-8\",\n      children: \"Address Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full md:w-1/2\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        value: searchString,\n        onChange: function onChange(e) {\n          return setSearchString(e.target.value);\n        },\n        icon: \"icon-search.svg\",\n        name: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-10\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        prependAddress: prependAddress,\n        removeAddress: removeAddress,\n        replaceAddress: replaceAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), addresses.map(function (address, i) {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          initialAddress: address,\n          prependAddress: prependAddress,\n          removeAddress: removeAddress,\n          replaceAddress: replaceAddress\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"BfdJ9wYF29uYnkb2mwzNT51PQRE=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/app/pages/address-book.js"],"names":["React","useState","useEffect","Head","Layout","Input","Card","search","seedAddresses","Home","searchString","setSearchString","addresses","setAddresses","prependAddress","address","removeAddress","addressToRemove","filter","id","replaceAddress","replacementAddress","map","then","results","e","target","value","i"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Head from 'next/head'\nimport Layout from '../components/layout/layout'\nimport Input from '../components/input/input'\nimport Card from '../components/card/card'\n\nimport search from '../addressesApi/search';\nimport seedAddresses from '../addressesApi/seedAddresses'; \n\nexport default function Home( {} ) {\n  // seedAddresses()\n  const [searchString, setSearchString] = useState('')\n  const [addresses, setAddresses] = useState([])\n  const prependAddress = address => {\n    setAddresses([address,...addresses])\n  }\n  const removeAddress = addressToRemove => {\n    setAddresses(addresses.filter(address => addressToRemove.id != address.id))\n  }\n  const replaceAddress = replacementAddress => {\n    setAddresses(addresses.map(address => replacementAddress.id === address.id ? replacementAddress : address))\n  }\n\n  useEffect(() => {\n    search(searchString)\n      .then(results => setAddresses(results));\n  },[searchString])\n\n  return (\n    <Layout home>\n      <Head>\n        <title>Address Book</title>\n      </Head>\n      <h1 className=\"mb-8\">Address Book</h1>\n      <div className=\"w-full md:w-1/2\">\n        <Input\n          value={searchString}\n          onChange={e => setSearchString(e.target.value)}\n          icon=\"icon-search.svg\"\n          name=\"search\"\n        ></Input>\n      </div>\n      <div className=\"mt-10\">\n      <Card \n        prependAddress={prependAddress} \n        removeAddress={removeAddress} \n        replaceAddress={replaceAddress}\n        />\n      {addresses.map((address,i) => \n        <Card key={i} initialAddress={address} prependAddress={prependAddress} removeAddress={removeAddress} replaceAddress={replaceAddress}>\n        </Card>\n      )}\n      </div>\n    </Layout>\n  )\n}"]},"metadata":{},"sourceType":"module"}