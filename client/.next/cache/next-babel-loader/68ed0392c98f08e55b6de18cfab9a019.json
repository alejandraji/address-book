{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/app/components/card/card.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport styles from './card.module.scss';\nimport Button from '../button/button';\nimport Input from '../input/input';\nimport deleteById from '../../addressesApi/deleteById';\nimport create from '../../addressesApi/create';\nimport update from '../../addressesApi/update';\nconst emptyAddress = {\n  line1: '',\n  city: '',\n  state: '',\n  zip: '',\n  id: null\n};\nexport default function Card({\n  children,\n  initialAddress = emptyAddress,\n  prependAddress\n}) {\n  const {\n    0: editState,\n    1: setEditState\n  } = useState(false);\n  const {\n    0: address,\n    1: setAddress\n  } = useState(initialAddress);\n\n  const editHandleClick = () => {\n    setEditState(true);\n    renderEditForm();\n  }; //open the form to create a new address\n\n\n  const createHandleClick = () => {\n    setEditState(true);\n    console.log(\"create\");\n  }; //delete address card\n\n\n  const handleDelete = () => {\n    deleteById(address.id);\n    console.log('delete');\n  };\n\n  const renderEditForm = address => {\n    const handleChange = event => {\n      const updatedAddress = _objectSpread(_objectSpread({}, address), {}, {\n        [event.target.name]: event.target.value\n      });\n\n      setAddress(updatedAddress);\n    }; //update address\n\n\n    const handleSaveClick = () => {\n      setEditState(false);\n\n      if (!address.id) {\n        create(address).then(createdAddress);\n      } else {\n        update(address);\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `border-2 border-purple p-8 mt-8 w-full md:w-1/2 ${editState ? styles['card__edit--visible'] : styles['card__edit']}`,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        onChange: handleChange,\n        label: \"Address Line 1\",\n        name: \"line1\",\n        placeholder: \"Address\",\n        value: address.line1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: handleChange,\n        label: \"City\",\n        name: \"city\",\n        placeholder: \"City\",\n        value: address.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: handleChange,\n        label: \"State\",\n        name: \"state\",\n        placeholder: \"State\",\n        value: address.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: handleChange,\n        label: \"Zipcode\",\n        name: \"zip\",\n        placeholder: \"Zipcode\",\n        value: address.zip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSaveClick,\n        variant: \"primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  };\n\n  useEffect(() => {\n    console.log(setAddress);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.card,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex flex-wrap justify-between items-center`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 md:mb-0\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !address.id ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: createHandleClick,\n          variant: \"secondary\",\n          children: \"Add Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: editHandleClick,\n            variant: \"secondary\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleDelete,\n            variant: \"error\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), renderEditForm(address)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n}","map":{"version":3,"sources":["/app/components/card/card.js"],"names":["React","useState","useEffect","styles","Button","Input","deleteById","create","update","emptyAddress","line1","city","state","zip","id","Card","children","initialAddress","prependAddress","editState","setEditState","address","setAddress","editHandleClick","renderEditForm","createHandleClick","console","log","handleDelete","handleChange","event","updatedAddress","target","name","value","handleSaveClick","then","createdAddress","card"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nimport styles from './card.module.scss'\nimport Button from '../button/button'\nimport Input from '../input/input'\nimport deleteById from '../../addressesApi/deleteById';\nimport create from '../../addressesApi/create';\nimport update from '../../addressesApi/update';\nconst emptyAddress = { line1:'', city:'', state:'', zip: '', id:null }\n\nexport default function Card({children, initialAddress = emptyAddress, prependAddress }) {\n  const [editState, setEditState] = useState(false);\n  const [address, setAddress] = useState(initialAddress)\n\n  const editHandleClick = () => {\n    setEditState(true);\n    renderEditForm();\n  }\n\n  //open the form to create a new address\n  const createHandleClick = () => {\n    setEditState(true);\n    console.log(\"create\");\n  }\n\n  //delete address card\n  const handleDelete = () => {\n    deleteById(address.id);\n    console.log('delete')\n  }\n\n\n  const renderEditForm = (address) => {\n    const handleChange = (event) => {\n      const updatedAddress = {\n        ...address,\n        [event.target.name]: event.target.value,\n      }\n      setAddress(updatedAddress);\n    }\n    //update address\n    const handleSaveClick = () => {\n      setEditState(false);\n      if (!address.id) {\n        create(address)\n        .then(createdAddress)\n      } else { \n        update(address);\n      }\n    }\n   \n    return (\n      <div className={`border-2 border-purple p-8 mt-8 w-full md:w-1/2 ${editState ? styles['card__edit--visible']: styles['card__edit']}`}>\n        <Input onChange={handleChange} label=\"Address Line 1\" name=\"line1\" placeholder=\"Address\" value={address.line1}></Input>\n        <Input onChange={handleChange} label=\"City\" name=\"city\" placeholder=\"City\" value={address.city}></Input>\n        <Input onChange={handleChange} label=\"State\" name=\"state\" placeholder=\"State\" value={address.state}></Input>\n        <Input onChange={handleChange} label=\"Zipcode\" name=\"zip\" placeholder=\"Zipcode\" value={address.zip}></Input>\n        <Button onClick={handleSaveClick} variant=\"primary\">Save</Button>\n      </div>\n    )\n  }\n\n  useEffect(() => {\n    console.log(setAddress)\n   },[])\n \n\n  return (\n  <div className={styles.card}>\n    <div className={`flex flex-wrap justify-between items-center`}>\n      <div className=\"mb-4 md:mb-0\">\n        {children}\n      </div>\n      <div >\n        {!address.id ? \n          <Button onClick={createHandleClick} variant=\"secondary\">Add Address</Button>\n        : \n          <>\n            <Button onClick={editHandleClick} variant=\"secondary\">Edit</Button>\n            <Button onClick={handleDelete} variant=\"error\">Delete</Button>        \n          </>\n        }\n      </div>\n    </div>\n    {renderEditForm(address)}\n  </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}