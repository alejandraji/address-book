{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/app/components/card/card.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport styles from './card.module.scss';\nimport Button from '../button/button';\nimport Input from '../input/input';\nimport deleteById from '../../addressesApi/deleteById';\nimport create from '../../addressesApi/create';\nimport update from '../../addressesApi/update';\nvar emptyAddress = {\n  line1: '',\n  city: '',\n  state: '',\n  zip: '',\n  id: null\n}; // name needs to match address object keys\n\nvar formSchema = [{\n  label: \"Address Line 1\",\n  name: \"line1\",\n  placeholder: \"Address\",\n  type: 'text'\n}, {\n  label: \"City\",\n  name: \"city\",\n  placeholder: \"City\",\n  type: 'text'\n}, {\n  label: \"State\",\n  name: \"state\",\n  placeholder: \"State\",\n  type: 'text'\n}, {\n  label: \"Zipcode\",\n  name: \"zip\",\n  placeholder: \"Zipcode\",\n  type: 'text'\n}];\nexport default function Card(_ref) {\n  _s();\n\n  var _this = this;\n\n  var _ref$initialAddress = _ref.initialAddress,\n      initialAddress = _ref$initialAddress === void 0 ? emptyAddress : _ref$initialAddress,\n      prependAddress = _ref.prependAddress,\n      removeAddress = _ref.removeAddress,\n      replaceAddress = _ref.replaceAddress;\n\n  var _useState = useState(false),\n      editState = _useState[0],\n      setEditState = _useState[1];\n\n  var _useState2 = useState(initialAddress),\n      address = _useState2[0],\n      setAddress = _useState2[1];\n\n  var _useState3 = useState({\n    line1: null,\n    zip: null,\n    city: null,\n    state: null\n  }),\n      addressErrors = _useState3[0],\n      setAddressErrors = _useState3[1];\n\n  var setAddressError = function setAddressError(name, message) {\n    return setAddressErrors(_objectSpread(_objectSpread({}, addressErrors), {}, _defineProperty({}, name, message)));\n  };\n\n  var formHandleClick = function formHandleClick() {\n    setEditState(true);\n    renderEditForm(address);\n  }; // Open form to create a new address\n\n\n  var createHandleClick = function createHandleClick() {\n    setEditState(true);\n  }; // Delete address\n\n\n  var deleteHandleClick = function deleteHandleClick() {\n    deleteById(address.id).then(function () {\n      return removeAddress(address);\n    });\n  };\n\n  var renderEditForm = function renderEditForm(address) {\n    var handleChange = function handleChange(event) {\n      var updatedAddress = _objectSpread(_objectSpread({}, address), {}, _defineProperty({}, event.target.name, event.target.value));\n\n      setAddress(updatedAddress);\n    }; // Update address\n\n\n    var saveHandleClick = function saveHandleClick() {\n      var line1 = address.line1,\n          badAddress = _objectWithoutProperties(address, [\"line1\"]);\n\n      setEditState(false);\n\n      if (!address.id) {\n        create(badAddress).then(function (createdAddress) {\n          return prependAddress(createdAddress);\n        });\n      } else {\n        update(badAddress).then(function (updatedAddress) {\n          return replaceAddress(updatedAddress);\n        })[\"catch\"](function (errors) {\n          errors.forEach(function (_ref2) {\n            var params = _ref2.params;\n            return setAddressError(params.missingProperty, \"\".concat(params.missingProperty, \" is wrong\"));\n          });\n        });\n      }\n    }; // Close form\n\n\n    var cancelHandleClick = function cancelHandleClick() {\n      setEditState(false);\n    };\n\n    console.log('addre errors', addressErrors);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-2 border-purple p-8 mt-8 w-full md:w-1/2 \".concat(editState ? styles['card__edit--visible'] : styles['card__edit']),\n      children: [formSchema.map(function (inputSchema) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [addressErrors[inputSchema.name], /*#__PURE__*/_jsxDEV(Input, _objectSpread({\n            onChange: handleChange,\n            value: address[inputSchema.name]\n          }, inputSchema), inputSchema.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true);\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: saveHandleClick,\n        variant: \"primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: cancelHandleClick,\n        variant: \"primary\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, _this);\n  };\n\n  var initialAddressCard = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [initialAddress.line1, \", \", initialAddress.city, \", \", initialAddress.state, \" \", initialAddress.zip]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 30\n  }, this);\n\n  var addAddressButton = /*#__PURE__*/_jsxDEV(Button, {\n    onClick: createHandleClick,\n    variant: \"secondary\",\n    children: \"Add Address\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 28\n  }, this);\n\n  var editAndDeleteButtons = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: formHandleClick,\n      variant: \"secondary\",\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: deleteHandleClick,\n      variant: \"error\",\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.card,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 md:mb-0\",\n        children: [!editState && !address.id && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg\",\n          children: \"Add a new user's address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 40\n        }, this), initialAddress.id && initialAddressCard]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !address.id ? addAddressButton : editAndDeleteButtons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this), renderEditForm(address)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Card, \"XFfSga69hQ7eYrxWuH62w3pUxvc=\");\n\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/app/components/card/card.js"],"names":["React","useState","useEffect","styles","Button","Input","deleteById","create","update","emptyAddress","line1","city","state","zip","id","formSchema","label","name","placeholder","type","Card","initialAddress","prependAddress","removeAddress","replaceAddress","editState","setEditState","address","setAddress","addressErrors","setAddressErrors","setAddressError","message","formHandleClick","renderEditForm","createHandleClick","deleteHandleClick","then","handleChange","event","updatedAddress","target","value","saveHandleClick","badAddress","createdAddress","errors","forEach","params","missingProperty","cancelHandleClick","console","log","map","inputSchema","initialAddressCard","addAddressButton","editAndDeleteButtons","card"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nimport styles from './card.module.scss'\nimport Button from '../button/button'\nimport Input from '../input/input'\nimport deleteById from '../../addressesApi/deleteById';\nimport create from '../../addressesApi/create';\nimport update from '../../addressesApi/update';\nconst emptyAddress = { line1:'', city:'', state:'', zip: '', id:null }\n\n// name needs to match address object keys\nconst formSchema = [\n  {\n    label: \"Address Line 1\",\n    name: \"line1\",\n    placeholder: \"Address\",\n    type:'text'\n\n  },\n  {\n    label: \"City\",\n    name: \"city\",\n    placeholder: \"City\",\n    type:'text'\n  },\n  {\n    label: \"State\",\n    name: \"state\",\n    placeholder: \"State\",\n    type:'text'\n  },\n  {\n    label: \"Zipcode\",\n    name: \"zip\",\n    placeholder: \"Zipcode\",\n    type:'text'\n  }\n]\n\nexport default function Card({initialAddress = emptyAddress, prependAddress, removeAddress, replaceAddress }) {\n  const [editState, setEditState] = useState(false);\n  const [address, setAddress] = useState(initialAddress)\n  const [addressErrors, setAddressErrors] = useState({line1: null, zip: null, city: null, state: null})\n  const setAddressError = (name, message) => setAddressErrors({...addressErrors, [name]: message})\n\n\n  const formHandleClick = () => {\n    setEditState(true);\n    renderEditForm(address);\n  }\n\n  // Open form to create a new address\n  const createHandleClick = () => {\n    setEditState(true);\n  }\n\n  // Delete address\n  const deleteHandleClick = () => {\n    deleteById(address.id)\n    .then(()=> removeAddress(address))\n  }\n\n  const renderEditForm = (address) => {\n    const handleChange = (event) => {\n      const updatedAddress = {\n        ...address,\n        [event.target.name]: event.target.value,\n      }\n      setAddress(updatedAddress);\n    }\n    // Update address\n    const saveHandleClick = () => {\n      const { line1, ...badAddress } = address;\n      setEditState(false);\n      if (!address.id) {\n        create(badAddress)\n          .then(createdAddress => prependAddress(createdAddress))\n        \n      } else { \n        update(badAddress)\n          .then(updatedAddress => replaceAddress(updatedAddress))\n          .catch(errors => {\n            errors.forEach(({params})=> setAddressError(params.missingProperty, `${params.missingProperty} is wrong`)  )\n          })\n      }\n    }\n    // Close form\n    const cancelHandleClick = () => {\n      setEditState(false);\n    }\n    console.log('addre errors', addressErrors);\n    return (\n      <div className={`border-2 border-purple p-8 mt-8 w-full md:w-1/2 ${editState ? styles['card__edit--visible']: styles['card__edit']}`}>\n        {formSchema.map(inputSchema => \n          <>\n            {addressErrors[inputSchema.name]}\n            <Input \n              key={inputSchema.name}\n              onChange={handleChange} \n              value={address[inputSchema.name]} \n              {...inputSchema}\n            />\n          </>\n        )}\n        <Button onClick={saveHandleClick} variant=\"primary\">Save</Button>\n        <Button onClick={cancelHandleClick} variant=\"primary\">Cancel</Button> \n      </div>\n    )\n  }\n\n  const initialAddressCard = <p>{initialAddress.line1}, {initialAddress.city}, {initialAddress.state} {initialAddress.zip}</p>\n  const addAddressButton = <Button onClick={createHandleClick} variant=\"secondary\">Add Address</Button>\n  const editAndDeleteButtons = (\n    <>\n    <Button onClick={formHandleClick} variant=\"secondary\">Edit</Button>\n    <Button onClick={deleteHandleClick} variant=\"error\">Delete</Button> \n    </>\n  )\n\n  return (\n  <div className={styles.card}>\n    <div className={`flex flex-wrap justify-between items-center`}>\n      <div className=\"mb-4 md:mb-0\">\n        {!editState && !address.id  && <p className=\"text-lg\">Add a new user's address</p>}\n        {initialAddress.id && initialAddressCard} \n      </div>\n      <div>\n      {!address.id ? addAddressButton : editAndDeleteButtons}\n      </div>\n    </div>\n    {renderEditForm(address)}\n  </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}